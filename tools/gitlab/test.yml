# CI script for testing Wine

.wine-test:
  stage: test
  image: $CI_REGISTRY/wine/wine:debian-bullseye
  interruptible: true
  variables:
    GIT_STRATEGY: none
    GECKO_VER: 2.47.4
    MONO_VER: 7.4.0
    EXTRA_TESTS: |
      dinput:hid dwrite:layout kernel32:debugger riched20:richole twain_32:dsm wbemdisp:wbemdisp mmdevapi:render
      msi:install msi:msi quartz:vmr7 user32:winstation comdlg32:filedlg kernel32:sync mshtml:htmldoc qmgr:job
      dsound:dsound kernel32:pipe ntdll:threadpool quartz:videorenderer reg.exe:add kernel32:loader mscoree:mscoree
      mshtml:script winmm:timer regedit.exe:regedit user32:input adsldp:ldap quartz:vmr9 reg.exe:import
      uxtheme:system dwrite:font user32:clipboard kernel32:process msi:action winmm:wave quartz:dsoundrender
      dwrite:analyzer quartz:filtergraph wsdapi:discovery riched20:editor xaudio2_7:xaudio2 kernel32:console
      amstream:amstream explorerframe:nstc d2d1:d2d1 winmm:mci ddraw:ddraw1 dxgi:dxgi shell32:shlexec ddraw:ddraw2
      ddraw:ddraw4 user32:win ddraw:ddraw7 winhttp:winhttp cmd.exe:batch user32:msg ws2_32:sock
    EXCLUDE_TESTS: d3d10core:d3d10core d3d11:d3d11 d3d8:device d3d8:visual d3d9:d3d9ex d3d9:device d3d9:visual
  cache:
    - key: wine-gecko-$GECKO_VER
      paths:
        - wine-gecko-$GECKO_VER-x86.msi
        - wine-gecko-$GECKO_VER-x86_64.msi
    - key: wine-mono-$MONO_VER
      paths:
        - wine-mono-$MONO_VER-x86.msi
  before_script:
    - export BASEDIR=$PWD
    - export PATH=$BASEDIR/usr/local/bin:$PATH
    - export DISPLAY=:0
    - export LC_ALL=C.UTF-8
    - export WINEDEBUG=err-all,fixme-all
    - |
      cat >$HOME/xorg.conf << EOF
      Section "Device"
        Identifier "dummy"
        Driver "dummy"
        VideoRam 32768
      EndSection
      EOF
    - echo 'exec /usr/bin/fvwm -f config -c "Style * MwmDecor" -c "Style * UsePPosition" 2>/dev/null' >$HOME/.xinitrc
    - startx -- -config $HOME/xorg.conf $DISPLAY &
    - test -f wine-gecko-$GECKO_VER-x86.msi || curl -o wine-gecko-$GECKO_VER-x86.msi https://dl.winehq.org/wine/wine-gecko/$GECKO_VER/wine-gecko-$GECKO_VER-x86.msi
    - test -f wine-gecko-$GECKO_VER-x86_64.msi || curl -o wine-gecko-$GECKO_VER-x86_64.msi https://dl.winehq.org/wine/wine-gecko/$GECKO_VER/wine-gecko-$GECKO_VER-x86_64.msi
    - test -f wine-mono-$MONO_VER-x86.msi || curl -o wine-mono-$MONO_VER-x86.msi https://dl.winehq.org/wine/wine-mono/$MONO_VER/wine-mono-$MONO_VER-x86.msi
    - mkdir -p $HOME/Documents $HOME/Desktop usr/local/share/wine/gecko usr/local/share/wine/mono
    - ln -sf $BASEDIR/wine-gecko-$GECKO_VER-x86.msi $BASEDIR/wine-gecko-$GECKO_VER-x86_64.msi usr/local/share/wine/gecko
    - ln -sf $BASEDIR/wine-mono-$MONO_VER-x86.msi usr/local/share/wine/mono
    - pulseaudio --start --exit-idle-time=-1
    - wine wineboot.exe -u
    - wine reg add HKCU\\Software\\Wine\\Drivers /v Graphics /d mac,x11,null /f
    - wineserver -w

test-linux-64:
  extends: .wine-test
  image: docker.io/rbernon/winehq
  tags:
    - local
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  needs:
    - job: build-linux
  script:
    - export WINETEST_COLOR=1
    - wine usr/local/lib/wine/x86_64-windows/winetest.exe -q -q -o - -t gitlab -u $CI_JOB_URL -n $EXCLUDE_TESTS $EXTRA_TESTS

test-linux-64-extra:
  extends: .wine-test
  image: docker.io/rbernon/winehq
  tags:
    - local
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  needs:
    - job: build-linux
  script:
    - export WINETEST_COLOR=1
    - wine usr/local/lib/wine/x86_64-windows/winetest.exe -q -q -o - -t gitlab -u $CI_JOB_URL $EXTRA_TESTS

test-nulldrv-64:
  extends: .wine-test
  image: docker.io/rbernon/winehq
  tags:
    - local
  variables:
    INCLUDE_TESTS: user32
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  needs:
    - job: build-linux
  allow_failure: true
  script:
    - export DISPLAY=
    - export WINETEST_COLOR=1
    - wine usr/local/lib/wine/x86_64-windows/winetest.exe -q -q -o - -t gitlab -u $CI_JOB_URL $INCLUDE_TESTS

debian-32:
  extends: .wine-test
  rules:
    - if: $CI_PIPELINE_SOURCE == 'trigger' && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs:
    - job: build-daily-linux
  script:
    - wine usr/local/lib/wine/i386-windows/winetest.exe -q -t gitlab-$CI_JOB_NAME -u $CI_JOB_URL

debian-64:
  extends: .wine-test
  rules:
    - if: $CI_PIPELINE_SOURCE == 'trigger' && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs:
    - job: build-daily-linux
  script:
    - wine usr/local/lib/wine/x86_64-windows/winetest.exe -q -t gitlab-$CI_JOB_NAME -u $CI_JOB_URL

win10-21h2-32:
  stage: test
  interruptible: true
  variables:
    GIT_STRATEGY: none
  rules:
    - if: $CI_PIPELINE_SOURCE == 'trigger' && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs:
    - job: build-winetest
  tags:
    - win10-21h2
  script:
    - ./winetest.exe -q -t gitlab-$CI_JOB_NAME -u $CI_JOB_URL

win10-21h2-64:
  stage: test
  interruptible: true
  variables:
    GIT_STRATEGY: none
  rules:
    - if: $CI_PIPELINE_SOURCE == 'trigger' && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs:
    - job: build-winetest
  tags:
    - win10-21h2
  script:
    - ./winetest64.exe -q -t gitlab-$CI_JOB_NAME -u $CI_JOB_URL
