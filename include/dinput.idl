/*
 * Copyright 2022 RÃ©mi Bernon for CodeWeavers
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
 */

import "objidlbase.idl";
import "unknwn.idl";

#ifndef MAX_PATH
#define MAX_PATH 260
#endif

cpp_quote("#ifndef COBJMACROS")
cpp_quote("#define COBJMACROS")
cpp_quote("#define __COBJMACROS_DEFINED")
cpp_quote("#endif")

typedef struct DIENVELOPE
{
    DWORD dwSize;
    DWORD dwAttackLevel;
    DWORD dwAttackTime;
    DWORD dwFadeLevel;
    DWORD dwFadeTime;
} DIENVELOPE, *LPDIENVELOPE;
typedef const DIENVELOPE *LPCDIENVELOPE;

typedef struct DIEFFECT_DX5
{
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwDuration;
    DWORD dwSamplePeriod;
    DWORD dwGain;
    DWORD dwTriggerButton;
    DWORD dwTriggerRepeatInterval;
    DWORD cAxes;
    DWORD *rgdwAxes;
    LONG *rglDirection;
    DIENVELOPE *lpEnvelope;
    DWORD cbTypeSpecificParams;
    void *lpvTypeSpecificParams;
} DIEFFECT_DX5, *LPDIEFFECT_DX5;
typedef const DIEFFECT_DX5 *LPCDIEFFECT_DX5;

typedef struct DIEFFECT
{
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwDuration;
    DWORD dwSamplePeriod;
    DWORD dwGain;
    DWORD dwTriggerButton;
    DWORD dwTriggerRepeatInterval;
    DWORD cAxes;
    DWORD *rgdwAxes;
    LONG *rglDirection;
    DIENVELOPE *lpEnvelope;
    DWORD cbTypeSpecificParams;
    void *lpvTypeSpecificParams;
    DWORD dwStartDelay;
} DIEFFECT, *LPDIEFFECT;
typedef const DIEFFECT *LPCDIEFFECT;

typedef DIEFFECT DIEFFECT_DX6;
typedef LPDIEFFECT LPDIEFFECT_DX6;

typedef struct DIEFFESCAPE
{
    DWORD dwSize;
    DWORD dwCommand;
    void *lpvInBuffer;
    DWORD cbInBuffer;
    void *lpvOutBuffer;
    DWORD cbOutBuffer;
} DIEFFESCAPE, *LPDIEFFESCAPE;

[
    object,
    local,
    uuid(e7e1f7c0-88d2-11d0-9ad0-00a0c9a06e35)
]
interface IDirectInputEffect : IUnknown
{
    HRESULT Initialize([in] HINSTANCE instance, [in] DWORD version, [in] REFGUID guid);
    HRESULT GetEffectGuid([out] GUID *guid);
    HRESULT GetParameters([in] DIEFFECT *params, [in] DWORD flags);
    HRESULT SetParameters([in] const DIEFFECT *params, [in] DWORD flags);
    HRESULT Start([in] DWORD iterations, [in] DWORD flags);
    HRESULT Stop();
    HRESULT GetEffectStatus([out] DWORD *status);
    HRESULT Download();
    HRESULT Unload();
    HRESULT Escape([in] DIEFFESCAPE *escape);
}
typedef IDirectInputEffect *LPDIRECTINPUTEFFECT;

typedef struct DIDEVCAPS_DX3
{
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwDevType;
    DWORD dwAxes;
    DWORD dwButtons;
    DWORD dwPOVs;
} DIDEVCAPS_DX3, *LPDIDEVCAPS_DX3;

typedef struct DIDEVCAPS
{
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwDevType;
    DWORD dwAxes;
    DWORD dwButtons;
    DWORD dwPOVs;
    DWORD dwFFSamplePeriod;
    DWORD dwFFMinTimeResolution;
    DWORD dwFirmwareRevision;
    DWORD dwHardwareRevision;
    DWORD dwFFDriverVersion;
} DIDEVCAPS, *LPDIDEVCAPS;

typedef struct DIPROPHEADER
{
    DWORD dwSize;
    DWORD dwHeaderSize;
    DWORD dwObj;
    DWORD dwHow;
} DIPROPHEADER,*LPDIPROPHEADER;
typedef const DIPROPHEADER *LPCDIPROPHEADER;

typedef struct DIDEVICEOBJECTDATA_DX3
{
    DWORD dwOfs;
    DWORD dwData;
    DWORD dwTimeStamp;
    DWORD dwSequence;
} DIDEVICEOBJECTDATA_DX3, *LPDIDEVICEOBJECTDATA_DX3;
typedef const DIDEVICEOBJECTDATA_DX3 *LPCDIDEVICEOBJECTDATA_DX3;

typedef struct DIDEVICEOBJECTDATA
{
    DWORD dwOfs;
    DWORD dwData;
    DWORD dwTimeStamp;
    DWORD dwSequence;
    UINT_PTR uAppData;
} DIDEVICEOBJECTDATA, *LPDIDEVICEOBJECTDATA;
typedef const DIDEVICEOBJECTDATA *LPCDIDEVICEOBJECTDATA;

typedef struct _DIOBJECTDATAFORMAT
{
    const GUID *pguid;
    DWORD dwOfs;
    DWORD dwType;
    DWORD dwFlags;
} DIOBJECTDATAFORMAT, *LPDIOBJECTDATAFORMAT;
typedef const DIOBJECTDATAFORMAT *LPCDIOBJECTDATAFORMAT;

typedef struct _DIDATAFORMAT
{
    DWORD dwSize;
    DWORD dwObjSize;
    DWORD dwFlags;
    DWORD dwDataSize;
    DWORD dwNumObjs;
    DIOBJECTDATAFORMAT *rgodf;
} DIDATAFORMAT, *LPDIDATAFORMAT;
typedef const DIDATAFORMAT *LPCDIDATAFORMAT;

typedef struct DIDEVICEOBJECTINSTANCE_DX3A
{
    DWORD dwSize;
    GUID guidType;
    DWORD dwOfs;
    DWORD dwType;
    DWORD dwFlags;
    CHAR tszName[MAX_PATH];
} DIDEVICEOBJECTINSTANCE_DX3A, *LPDIDEVICEOBJECTINSTANCE_DX3A;
typedef const DIDEVICEOBJECTINSTANCE_DX3A *LPCDIDEVICEOBJECTINSTANCE_DX3A;

typedef struct DIDEVICEOBJECTINSTANCE_DX3W
{
    DWORD dwSize;
    GUID guidType;
    DWORD dwOfs;
    DWORD dwType;
    DWORD dwFlags;
    WCHAR tszName[MAX_PATH];
} DIDEVICEOBJECTINSTANCE_DX3W, *LPDIDEVICEOBJECTINSTANCE_DX3W;
typedef const DIDEVICEOBJECTINSTANCE_DX3W *LPCDIDEVICEOBJECTINSTANCE_DX3W;

typedef struct DIDEVICEOBJECTINSTANCEA
{
    DWORD dwSize;
    GUID guidType;
    DWORD dwOfs;
    DWORD dwType;
    DWORD dwFlags;
    CHAR tszName[MAX_PATH];
    DWORD dwFFMaxForce;
    DWORD dwFFForceResolution;
    WORD wCollectionNumber;
    WORD wDesignatorIndex;
    WORD wUsagePage;
    WORD wUsage;
    DWORD dwDimension;
    WORD wExponent;
    WORD wReportId;
} DIDEVICEOBJECTINSTANCEA, *LPDIDEVICEOBJECTINSTANCEA;
typedef const DIDEVICEOBJECTINSTANCEA *LPCDIDEVICEOBJECTINSTANCEA;

typedef struct DIDEVICEOBJECTINSTANCEW
{
    DWORD dwSize;
    GUID guidType;
    DWORD dwOfs;
    DWORD dwType;
    DWORD dwFlags;
    WCHAR tszName[MAX_PATH];
    DWORD dwFFMaxForce;
    DWORD dwFFForceResolution;
    WORD wCollectionNumber;
    WORD wDesignatorIndex;
    WORD wUsagePage;
    WORD wUsage;
    DWORD dwDimension;
    WORD wExponent;
    WORD wReportId;
} DIDEVICEOBJECTINSTANCEW, *LPDIDEVICEOBJECTINSTANCEW;
typedef const DIDEVICEOBJECTINSTANCEW *LPCDIDEVICEOBJECTINSTANCEW;

typedef struct DIDEVICEINSTANCE_DX3A
{
    DWORD dwSize;
    GUID guidInstance;
    GUID guidProduct;
    DWORD dwDevType;
    CHAR tszInstanceName[MAX_PATH];
    CHAR tszProductName[MAX_PATH];
} DIDEVICEINSTANCE_DX3A, *LPDIDEVICEINSTANCE_DX3A;
typedef const DIDEVICEINSTANCE_DX3A *LPCDIDEVICEINSTANCE_DX3A;

typedef struct DIDEVICEINSTANCE_DX3W
{
    DWORD dwSize;
    GUID guidInstance;
    GUID guidProduct;
    DWORD dwDevType;
    WCHAR tszInstanceName[MAX_PATH];
    WCHAR tszProductName[MAX_PATH];
} DIDEVICEINSTANCE_DX3W, *LPDIDEVICEINSTANCE_DX3W;
typedef const DIDEVICEINSTANCE_DX3W *LPCDIDEVICEINSTANCE_DX3W;

typedef struct DIDEVICEINSTANCEA
{
    DWORD dwSize;
    GUID guidInstance;
    GUID guidProduct;
    DWORD dwDevType;
    CHAR tszInstanceName[MAX_PATH];
    CHAR tszProductName[MAX_PATH];
    GUID guidFFDriver;
    WORD wUsagePage;
    WORD wUsage;
} DIDEVICEINSTANCEA, *LPDIDEVICEINSTANCEA;
typedef const DIDEVICEINSTANCEA *LPCDIDEVICEINSTANCEA;

typedef struct DIDEVICEINSTANCEW
{
    DWORD dwSize;
    GUID guidInstance;
    GUID guidProduct;
    DWORD dwDevType;
    WCHAR tszInstanceName[MAX_PATH];
    WCHAR tszProductName[MAX_PATH];
    GUID guidFFDriver;
    WORD wUsagePage;
    WORD wUsage;
} DIDEVICEINSTANCEW, *LPDIDEVICEINSTANCEW;
typedef const DIDEVICEINSTANCEW *LPCDIDEVICEINSTANCEW;

typedef BOOL (__stdcall *LPDIENUMDEVICEOBJECTSCALLBACKA)(const DIDEVICEOBJECTINSTANCEA *, void *);
typedef BOOL (__stdcall *LPDIENUMDEVICEOBJECTSCALLBACKW)(const DIDEVICEOBJECTINSTANCEW *, void *);

[
    object,
    local,
    uuid(5944e680-c92e-11cf-bfc7-444553540000)
]
interface IDirectInputDeviceA : IUnknown
{
    HRESULT GetCapabilities(DIDEVCAPS *lpDIDevCaps);
    HRESULT EnumObjects(LPDIENUMDEVICEOBJECTSCALLBACKA lpCallback, void *pvRef, DWORD dwFlags);
    HRESULT GetProperty(REFGUID rguidProp, DIPROPHEADER *pdiph);
    HRESULT SetProperty(REFGUID rguidProp, const DIPROPHEADER *pdiph);
    HRESULT Acquire();
    HRESULT Unacquire();
    HRESULT GetDeviceState(DWORD cbData, void *lpvData);
    HRESULT GetDeviceData(DWORD cbObjectData, DIDEVICEOBJECTDATA *rgdod, DWORD *pdwInOut, DWORD dwFlags);
    HRESULT SetDataFormat(const DIDATAFORMAT *lpdf);
    HRESULT SetEventNotification(HANDLE hEvent);
    HRESULT SetCooperativeLevel(HWND hwnd, DWORD dwFlags);
    HRESULT GetObjectInfo(DIDEVICEOBJECTINSTANCEA *pdidoi, DWORD dwObj, DWORD dwHow);
    HRESULT GetDeviceInfo(DIDEVICEINSTANCEA *pdidi);
    HRESULT RunControlPanel(HWND hwndOwner, DWORD dwFlags);
    HRESULT Initialize(HINSTANCE hinst, DWORD dwVersion, REFGUID rguid);
};
typedef IDirectInputDeviceA *LPDIRECTINPUTDEVICEA;

[
    object,
    local,
    uuid(5944e681-c92e-11cf-bfc7-444553540000)
]
interface IDirectInputDeviceW : IUnknown
{
    HRESULT GetCapabilities(DIDEVCAPS *lpDIDevCaps);
    HRESULT EnumObjects(LPDIENUMDEVICEOBJECTSCALLBACKW lpCallback, void *pvRef, DWORD dwFlags);
    HRESULT GetProperty(REFGUID rguidProp, DIPROPHEADER *pdiph);
    HRESULT SetProperty(REFGUID rguidProp, const DIPROPHEADER *pdiph);
    HRESULT Acquire();
    HRESULT Unacquire();
    HRESULT GetDeviceState(DWORD cbData, void *lpvData);
    HRESULT GetDeviceData(DWORD cbObjectData, DIDEVICEOBJECTDATA *rgdod, DWORD *pdwInOut, DWORD dwFlags);
    HRESULT SetDataFormat(const DIDATAFORMAT *lpdf);
    HRESULT SetEventNotification(HANDLE hEvent);
    HRESULT SetCooperativeLevel(HWND hwnd, DWORD dwFlags);
    HRESULT GetObjectInfo(DIDEVICEOBJECTINSTANCEW *pdidoi, DWORD dwObj, DWORD dwHow);
    HRESULT GetDeviceInfo(DIDEVICEINSTANCEW *pdidi);
    HRESULT RunControlPanel(HWND hwndOwner, DWORD dwFlags);
    HRESULT Initialize(HINSTANCE hinst, DWORD dwVersion, REFGUID rguid);
};
typedef IDirectInputDeviceW *LPDIRECTINPUTDEVICEW;

typedef struct DIEFFECTINFOA
{
    DWORD dwSize;
    GUID guid;
    DWORD dwEffType;
    DWORD dwStaticParams;
    DWORD dwDynamicParams;
    CHAR tszName[MAX_PATH];
} DIEFFECTINFOA, *LPDIEFFECTINFOA;
typedef const DIEFFECTINFOA *LPCDIEFFECTINFOA;

typedef struct DIEFFECTINFOW
{
    DWORD dwSize;
    GUID guid;
    DWORD dwEffType;
    DWORD dwStaticParams;
    DWORD dwDynamicParams;
    WCHAR tszName[MAX_PATH];
} DIEFFECTINFOW, *LPDIEFFECTINFOW;
typedef const DIEFFECTINFOW *LPCDIEFFECTINFOW;

typedef BOOL (__stdcall *LPDIENUMEFFECTSCALLBACKA)(const DIEFFECTINFOA *, void *);
typedef BOOL (__stdcall *LPDIENUMEFFECTSCALLBACKW)(const DIEFFECTINFOW *, void *);

typedef BOOL (__stdcall *LPDIENUMCREATEDEFFECTOBJECTSCALLBACK)(IDirectInputEffect *, void *);

[
    object,
    local,
    uuid(5944e682-c92e-11cf-bfc7-444553540000)
]
interface IDirectInputDevice2A : IDirectInputDeviceA
{
    HRESULT CreateEffect(REFGUID rguid, const DIEFFECT *lpeff, IDirectInputEffect **ppdeff, IUnknown *punkOuter);
    HRESULT EnumEffects(LPDIENUMEFFECTSCALLBACKA lpCallback, void *pvRef, DWORD dwEffType);
    HRESULT GetEffectInfo(DIEFFECTINFOA *pdei, REFGUID rguid);
    HRESULT GetForceFeedbackState(DWORD *pdwOut);
    HRESULT SendForceFeedbackCommand(DWORD dwFlags);
    HRESULT EnumCreatedEffectObjects(LPDIENUMCREATEDEFFECTOBJECTSCALLBACK lpCallback, void *pvRef, DWORD fl);
    HRESULT Escape(DIEFFESCAPE *pesc);
    HRESULT Poll();
    HRESULT SendDeviceData(DWORD cbObjectData, LPCDIDEVICEOBJECTDATA rgdod, DWORD *pdwInOut, DWORD fl);
};

[
    object,
    local,
    uuid(5944e683-c92e-11cf-bfc7-444553540000)
]
interface IDirectInputDevice2W : IDirectInputDeviceW
{
    HRESULT CreateEffect(REFGUID rguid, const DIEFFECT *lpeff, IDirectInputEffect **ppdeff, IUnknown *punkOuter);
    HRESULT EnumEffects(LPDIENUMEFFECTSCALLBACKW lpCallback, void *pvRef, DWORD dwEffType);
    HRESULT GetEffectInfo(DIEFFECTINFOW *pdei, REFGUID rguid);
    HRESULT GetForceFeedbackState(DWORD *pdwOut);
    HRESULT SendForceFeedbackCommand(DWORD dwFlags);
    HRESULT EnumCreatedEffectObjects(LPDIENUMCREATEDEFFECTOBJECTSCALLBACK lpCallback, void *pvRef, DWORD fl);
    HRESULT Escape(DIEFFESCAPE *pesc);
    HRESULT Poll();
    HRESULT SendDeviceData(DWORD cbObjectData, LPCDIDEVICEOBJECTDATA rgdod, DWORD *pdwInOut, DWORD fl);
};

typedef struct DIFILEEFFECT
{
    DWORD dwSize;
    GUID GuidEffect;
    const DIEFFECT *lpDiEffect;
    CHAR szFriendlyName[MAX_PATH];
} DIFILEEFFECT, *LPDIFILEEFFECT;
typedef const DIFILEEFFECT *LPCDIFILEEFFECT;

typedef BOOL (__stdcall *LPDIENUMEFFECTSINFILECALLBACK)(const DIFILEEFFECT *, void *);

[
    object,
    local,
    uuid(57d7c6bc-2356-11d3-8e9d-00c04f6844ae)
]
interface IDirectInputDevice7A : IDirectInputDevice2A
{
    HRESULT EnumEffectsInFile(const char *lpszFileName,LPDIENUMEFFECTSINFILECALLBACK pec,void *pvRef,DWORD dwFlags);
    HRESULT WriteEffectToFile(const char *lpszFileName,DWORD dwEntries,DIFILEEFFECT *rgDiFileEft,DWORD dwFlags);
};

[
    object,
    local,
    uuid(57d7c6bd-2356-11d3-8e9d-00c04f6844ae)
]
interface IDirectInputDevice7W : IDirectInputDevice2W
{
    HRESULT EnumEffectsInFile(const WCHAR *lpszFileName,LPDIENUMEFFECTSINFILECALLBACK pec,void *pvRef,DWORD dwFlags);
    HRESULT WriteEffectToFile(const WCHAR *lpszFileName,DWORD dwEntries,DIFILEEFFECT *rgDiFileEft,DWORD dwFlags);
};

typedef struct _DIACTIONA {
    UINT_PTR uAppData;
    DWORD dwSemantic;
    DWORD dwFlags;
    union
    {
        const CHAR *lptszActionName;
        UINT uResIdString;
    } DUMMYUNIONNAME;
    GUID guidInstance;
    DWORD dwObjID;
    DWORD dwHow;
} DIACTIONA, *LPDIACTIONA;
typedef const DIACTIONA *LPCDIACTIONA;

typedef struct _DIACTIONW {
    UINT_PTR uAppData;
    DWORD dwSemantic;
    DWORD dwFlags;
    union {
        const WCHAR *lptszActionName;
        UINT uResIdString;
    } DUMMYUNIONNAME;
    GUID guidInstance;
    DWORD dwObjID;
    DWORD dwHow;
} DIACTIONW, *LPDIACTIONW;
typedef const DIACTIONW *LPCDIACTIONW;

typedef struct _DIACTIONFORMATA
{
    DWORD dwSize;
    DWORD dwActionSize;
    DWORD dwDataSize;
    DWORD dwNumActions;
    DIACTIONA *rgoAction;
    GUID guidActionMap;
    DWORD dwGenre;
    DWORD dwBufferSize;
    LONG lAxisMin;
    LONG lAxisMax;
    HINSTANCE hInstString;
    FILETIME ftTimeStamp;
    DWORD dwCRC;
    CHAR tszActionMap[MAX_PATH];
} DIACTIONFORMATA, *LPDIACTIONFORMATA;
typedef const DIACTIONFORMATA *LPCDIACTIONFORMATA;

typedef struct _DIACTIONFORMATW
{
    DWORD dwSize;
    DWORD dwActionSize;
    DWORD dwDataSize;
    DWORD dwNumActions;
    DIACTIONW *rgoAction;
    GUID guidActionMap;
    DWORD dwGenre;
    DWORD dwBufferSize;
    LONG lAxisMin;
    LONG lAxisMax;
    HINSTANCE hInstString;
    FILETIME ftTimeStamp;
    DWORD dwCRC;
    WCHAR tszActionMap[MAX_PATH];
} DIACTIONFORMATW, *LPDIACTIONFORMATW;
typedef const DIACTIONFORMATW *LPCDIACTIONFORMATW;

typedef struct _DIDEVICEIMAGEINFOA {
    CHAR tszImagePath[MAX_PATH];
    DWORD dwFlags;
    DWORD dwViewID;
    RECT rcOverlay;
    DWORD dwObjID;
    DWORD dwcValidPts;
    POINT rgptCalloutLine[5];
    RECT rcCalloutRect;
    DWORD dwTextAlign;
} DIDEVICEIMAGEINFOA, *LPDIDEVICEIMAGEINFOA;
typedef const DIDEVICEIMAGEINFOA *LPCDIDEVICEIMAGEINFOA;

typedef struct _DIDEVICEIMAGEINFOW {
    WCHAR tszImagePath[MAX_PATH];
    DWORD dwFlags;
    DWORD dwViewID;
    RECT rcOverlay;
    DWORD dwObjID;
    DWORD dwcValidPts;
    POINT rgptCalloutLine[5];
    RECT rcCalloutRect;
    DWORD dwTextAlign;
} DIDEVICEIMAGEINFOW, *LPDIDEVICEIMAGEINFOW;
typedef const DIDEVICEIMAGEINFOW *LPCDIDEVICEIMAGEINFOW;

typedef struct _DIDEVICEIMAGEINFOHEADERA {
    DWORD dwSize;
    DWORD dwSizeImageInfo;
    DWORD dwcViews;
    DWORD dwcButtons;
    DWORD dwcAxes;
    DWORD dwcPOVs;
    DWORD dwBufferSize;
    DWORD dwBufferUsed;
    DIDEVICEIMAGEINFOA *lprgImageInfoArray;
} DIDEVICEIMAGEINFOHEADERA, *LPDIDEVICEIMAGEINFOHEADERA;
typedef const DIDEVICEIMAGEINFOHEADERA *LPCDIDEVICEIMAGEINFOHEADERA;

typedef struct _DIDEVICEIMAGEINFOHEADERW {
    DWORD dwSize;
    DWORD dwSizeImageInfo;
    DWORD dwcViews;
    DWORD dwcButtons;
    DWORD dwcAxes;
    DWORD dwcPOVs;
    DWORD dwBufferSize;
    DWORD dwBufferUsed;
    DIDEVICEIMAGEINFOW *lprgImageInfoArray;
} DIDEVICEIMAGEINFOHEADERW, *LPDIDEVICEIMAGEINFOHEADERW;
typedef const DIDEVICEIMAGEINFOHEADERW *LPCDIDEVICEIMAGEINFOHEADERW;

[
    object,
    local,
    uuid(54d41080-dc15-4833-a41b-748f73a38179)
]
interface IDirectInputDevice8A : IDirectInputDevice7A
{
    HRESULT BuildActionMap(DIACTIONFORMATA *lpdiaf, const CHAR *lpszUserName, DWORD dwFlags);
    HRESULT SetActionMap(DIACTIONFORMATA *lpdiaf, const CHAR *lpszUserName, DWORD dwFlags);
    HRESULT GetImageInfo(DIDEVICEIMAGEINFOHEADERA *lpdiDevImageInfoHeader);
};

[
    object,
    local,
    uuid(54d41081-dc15-4833-a41b-748f73a38179)
]
interface IDirectInputDevice8W : IDirectInputDevice7W
{
    HRESULT BuildActionMap(DIACTIONFORMATW *lpdiaf, const WCHAR *lpszUserName, DWORD dwFlags);
    HRESULT SetActionMap(DIACTIONFORMATW *lpdiaf, const WCHAR *lpszUserName, DWORD dwFlags);
    HRESULT GetImageInfo(DIDEVICEIMAGEINFOHEADERW *lpdiDevImageInfoHeader);
};

cpp_quote("#ifdef __COBJMACROS_DEFINED")
cpp_quote("#undef COBJMACROS")
cpp_quote("#endif")

cpp_quote("#include \"dinputbase.h\"")
