/*
 * Copyright 2018 Zebediah Figura
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
 */

import "mediaobj.idl";
import "strmif.idl";

cpp_quote("#include \"propkeydef.h\"")

cpp_quote("DEFINE_GUID(MEDIASUBTYPE_I420,0x30323449,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")
cpp_quote("DEFINE_GUID(MEDIASUBTYPE_MSAUDIO1,0x00000160,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")
cpp_quote("DEFINE_GUID(MEDIASUBTYPE_WMAUDIO2,0x00000161,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")
cpp_quote("DEFINE_GUID(MEDIASUBTYPE_WMAUDIO3,0x00000162,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")
cpp_quote("DEFINE_GUID(MEDIASUBTYPE_WMAUDIO_LOSSLESS,0x00000163,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")
cpp_quote("DEFINE_GUID(MEDIASUBTYPE_V216,0x36313256,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")
cpp_quote("DEFINE_GUID(MEDIASUBTYPE_V410,0x30313456,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")
cpp_quote("DEFINE_GUID(MEDIASUBTYPE_Y41T,0x54313459,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")
cpp_quote("DEFINE_GUID(MEDIASUBTYPE_Y42T,0x54323459,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")
cpp_quote("DEFINE_GUID(MEDIASUBTYPE_WMV1,0x31564d57,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")
cpp_quote("DEFINE_GUID(MEDIASUBTYPE_WMV2,0x32564d57,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")
cpp_quote("DEFINE_GUID(MEDIASUBTYPE_WMV3,0x33564d57,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")
cpp_quote("DEFINE_GUID(MEDIASUBTYPE_WMVA,0x41564d57,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")
cpp_quote("DEFINE_GUID(MEDIASUBTYPE_WMVP,0x50564d57,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")
cpp_quote("DEFINE_GUID(MEDIASUBTYPE_WMVR,0x52564d57,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")
cpp_quote("DEFINE_GUID(MEDIASUBTYPE_WVC1,0x31435657,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")
cpp_quote("DEFINE_GUID(MEDIASUBTYPE_WVP2,0x32505657,0x0000,0x0010,0x80,0x00,0x00,0xaa,0x00,0x38,0x9b,0x71);")

cpp_quote("DEFINE_PROPERTYKEY(MFPKEY_DECODER_DEINTERLACING,0x00c6281f,0x4be6,0x4e44,0x9e,0xd8,0x9e,0xc5,0x42,0x23,0x16,0xe4,0x04);")
cpp_quote("DEFINE_PROPERTYKEY(MFPKEY_DXVA_ENABLED,0x58e28605,0x1d51,0x48ed,0xa3,0xeb,0xf,0x9b,0xaf,0x78,0x5f,0xbd,0x01);")
cpp_quote("DEFINE_PROPERTYKEY(MFPKEY_FI_ENABLED,0xe020c4ca,0x3bdd,0x40ec,0xbc,0xf4,0x40,0x39,0xb1,0x45,0xe,0xb8,0x03);")


typedef enum WMT_PROP_DATATYPE WMT_PROP_DATATYPE;
enum WMT_PROP_DATATYPE
{
    WMT_PROP_TYPE_DWORD  = 0,
    WMT_PROP_TYPE_STRING = 1,
    WMT_PROP_TYPE_BINARY = 2,
    WMT_PROP_TYPE_BOOL   = 3,
    WMT_PROP_TYPE_QWORD  = 4,
    WMT_PROP_TYPE_WORD   = 5,
    WMT_PROP_TYPE_GUID   = 6,
};

typedef float ChMtxType;

[
    local, object, pointer_default(unique), helpstring(""),
    uuid(a81ba647-6227-43b7-b231-c7b15135dd7d),
]
interface IWMCodecLeakyBucket : IUnknown
{
    HRESULT SetBufferSizeBits([in] ULONG buffer_size);
    HRESULT GetBufferSizeBits([out] ULONG *buffer_size);
    HRESULT SetBufferFullnessBits([in] ULONG buffer_fullness);
    HRESULT GetBufferFullnessBits([out] ULONG *buffer_fullness);
}

[
    local, object, pointer_default(unique), helpstring(""),
    uuid(b72adf95-7adc-4a72-bc05-577d8ea6bf68),
]
interface IWMCodecOutputTimestamp : IUnknown
{
    HRESULT GetNextOutputTime([out] REFERENCE_TIME *time);
}

[
    local, object, pointer_default(unique), helpstring(""),
    uuid(73f0be8e-57f7-4f01-aa66-9f57340cfe0e),
]
interface IWMCodecPrivateData : IUnknown
{
    HRESULT SetPartialOutputType([in] DMO_MEDIA_TYPE *mt);
    HRESULT GetPrivateData([in, out, size_is(*size)] BYTE *data, [in, out] ULONG *size);
}

[
    local, object, pointer_default(unique), helpstring(""),
    uuid(2573e11a-f01a-4fdd-a98d-63b8e0ba9589),
]
interface IWMCodecProps : IUnknown
{
    HRESULT GetFormatProp([in] DMO_MEDIA_TYPE *mt, [in] LPCWSTR name, [out] WMT_PROP_DATATYPE *type,
                          [in, out, size_is(*size)] BYTE *value, [in, out] DWORD *size);
    HRESULT GetCodecProp([in] DWORD dwFormat, [in] LPCWSTR name, [out] WMT_PROP_DATATYPE *type,
                         [in, out, size_is(*size)] BYTE *value, [in, out] DWORD *size);
}

[
    local, object, pointer_default(unique), helpstring(""),
    uuid(a7b2504b-e58a-47fb-958b-cac7165a057d),
]
interface IWMCodecStrings : IUnknown
{
    HRESULT GetName([in] DMO_MEDIA_TYPE *mt, [in] ULONG length,
                    [in, out, size_is(*out_length)] LPWSTR name, [out] ULONG *out_length);
    HRESULT GetDescription([in] DMO_MEDIA_TYPE *mt, [in] ULONG length,
                           [in, out, size_is(*out_length)] LPWSTR description, [out] ULONG *out_length);
}

[
    local, object, pointer_default(unique), helpstring(""),
    uuid(e6a49e22-c099-421d-aad3-c061fb4ae85b),
]
interface IWMColorConvProps : IUnknown
{
    HRESULT SetMode([in] LONG Mode);
    HRESULT SetFullCroppingParam([in] LONG src_crop_left, [in] LONG src_crop_top,
                                 [in] LONG dst_crop_left, [in] LONG dst_crop_top,
                                 [in] LONG crop_width, [in] LONG crop_height);
}

[
    local, object, pointer_default(unique), helpstring(""),
    uuid(776c93b3-b72d-4508-b6d0-208785f553e7),
]
interface IWMColorLegalizerProps : IUnknown
{
    HRESULT SetColorLegalizerQuality([in] LONG quality);
}

[
    local, object, pointer_default(unique), helpstring(""),
    uuid(4c06bb9b-626c-4614-8329-cc6a21b93fa0),
]
interface IWMFrameInterpProps : IUnknown
{
    HRESULT SetFrameRateIn([in] LONG frame_rate, [in] LONG scale);
    HRESULT SetFrameRateOut([in] LONG frame_rate, [in] LONG scale);
    HRESULT SetFrameInterpEnabled([in] BOOL enabled);
    HRESULT SetComplexityLevel([in] int complexity);
}

[
    local, object, pointer_default(unique), helpstring(""),
    uuid(7b12e5d1-bd22-48ea-bc06-98e893221c89),
]
interface IWMInterlaceProps : IUnknown
{
    HRESULT SetProcessType([in] int process_type);
    HRESULT SetInitInverseTeleCinePattern([in] int init_pattern);
    HRESULT SetLastFrame(void);
}

[
    local, object, pointer_default(unique), helpstring(""),
    uuid(e7e9984f-f09f-4da4-903f-6e2e0efe56b5),
]
interface IWMResamplerProps : IUnknown
{
    HRESULT SetHalfFilterLength([in] LONG half_filter_length);
    HRESULT SetUserChannelMtx([in] ChMtxType *user_channel_mtx);
}

[
    local, object, pointer_default(unique), helpstring(""),
    uuid(57665d4c-0414-4faa-905b-10e546f81c33),
]
interface IWMResizerProps : IUnknown
{
    HRESULT SetResizerQuality([in] LONG quality);
    HRESULT SetInterlaceMode([in] LONG mode);
    HRESULT SetClipRegion([in] LONG clip_ori_x_src, [in] LONG clip_ori_y_src,
                          [in] LONG clip_width_src, [in] LONG clip_height_src);
    HRESULT SetFullCropRegion([in] LONG clip_ori_x_src, [in] LONG clip_ori_y_src,
                              [in] LONG clip_width_src, [in] LONG clip_height_src,
                              [in] LONG clip_ori_x_dst, [in] LONG clip_ori_y_dst,
                              [in] LONG clip_width_dst, [in] LONG clip_height_dst);
    HRESULT GetFullCropRegion([out] LONG *clip_ori_x_src, [out] LONG *clip_ori_y_src,
                              [out] LONG *clip_width_src, [out] LONG *clip_height_src,
                              [out] LONG *clip_ori_x_dst, [out] LONG *clip_ori_y_dst,
                              [out] LONG *clip_width_dst, [out] LONG *clip_height_dst);
}

[
    local, object, pointer_default(unique), helpstring(""),
    uuid(9bca9884-0604-4c2a-87da-793ff4d586c3),
]
interface IWMSampleExtensionSupport : IUnknown
{
    HRESULT SetUseSampleExtensions(BOOL use_extensions);
}

[
    local, object, pointer_default(unique), helpstring(""),
    uuid(cee3def2-3808-414d-be66-fafd472210bc),
]
interface IWMValidate : IUnknown
{
    HRESULT SetIdentifier([in] GUID validation_id);
}

[
    local, object, pointer_default(unique), helpstring(""),
    uuid(352bb3bd-2d4d-4323-9e71-dcdcfbd53ca6),
]
interface IWMVideoDecoderHurryup : IUnknown
{
    HRESULT SetHurryup([in] LONG hurryup);
    HRESULT GetHurryup([out] LONG *hurryup);
}

[
    local, object, pointer_default(unique), helpstring(""),
    uuid(45bda2ac-88e2-4923-98ba-3949080711a3),
]
interface IWMVideoDecoderReconBuffer : IUnknown
{
    HRESULT GetReconstructedVideoFrameSize([out] DWORD *size);
    HRESULT GetReconstructedVideoFrame([out] IMediaBuffer *buf);
    HRESULT SetReconstructedVideoFrame([in] IMediaBuffer *buf);
}

[
    local, object, pointer_default(unique), helpstring(""),
    uuid(9f8496be-5b9a-41b9-a9e8-f21cd80596c2),
]
interface IWMVideoForceKeyFrame : IUnknown
{
    HRESULT SetKeyFrame(void);
}

[
    uuid(bbeea841-0a63-4f52-a7ab-a9b3a84ed38a)
]
coclass CMP3DecMediaObject {}

[
    uuid(f447b69e-1884-4a7e-8055-346f74d6edb3)
]
coclass CResamplerMediaObject {}

[
    uuid(62ce7e72-4c71-4d20-b15d-452831a87d9d)
]
coclass CMSH264DecoderMFT {}

[
    uuid(2d709e52-123f-49b5-9cbc-9af5cde28fb9)
]
coclass CMSMPEGDecoderMFT {}

[
    uuid(2eeb4adf-4578-4d10-bca7-bb955f56320a)
]
coclass CWMADecMediaObject {}

[
    uuid(70f598e9-f4ab-495a-99e2-a7c4d3d89abf)
]
coclass CWMAEncMediaObject {}

[
    uuid(93af0c51-2275-45d2-a35b-f2ba21caed00)
]
coclass AACMFTEncoder {}

[
    uuid(98230571-0087-4204-b020-3282538e57d3)
]
coclass CColorConvertDMO {}

[
    uuid(d23b90d0-144f-46bd-841d-59e4eb19dc59)
]
coclass CWMV9EncMediaObject {}

[
    uuid(82d353df-90bd-4382-8bc2-3f6192b76e34)
]
coclass CWMVDecMediaObject {}

[
    uuid(7e320092-596a-41b2-bbeb-175d10504eb6)
]
coclass CWMVXEncMediaObject {}
